name: Create Issue from Template

on:
  workflow_dispatch:
    inputs:
      issue_template:
        description: 'Issue template to use (bug-report, feature-request, documentation-improvement, etc.)'
        required: true
        default: 'bug-report'
      issue_title:
        description: 'Title of the issue'
        required: true

jobs:
  create-issue:
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Download logs from latest workflow run by workflow name and title
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          workflow_title_filter="Create release ${{ github.event.inputs.issue_title }}"
          workflow_id=$(gh api \
            -H "Accept: application/vnd.github+json" \
            "/repos/${GITHUB_REPOSITORY}/actions/workflows" | jq -r '.workflows[] | select(.name == "Create release") | .id')
          if [ -z "$workflow_id" ] || [ "$workflow_id" = "null" ]; then
            echo "Relase workflow not found."
            exit 1
          fi
          run_id=$(gh api \
            -H "Accept: application/vnd.github+json" \
            "/repos/${GITHUB_REPOSITORY}/actions/workflows/${workflow_id}/runs" | jq -r '.workflow_runs[] | select(.display_title | test($workflow_title_filter; "i")) | .id' | head -n 1)
          if [ -z "$run_id" ] || [ "$run_id" = "null" ]; then
            echo "No runs found for workflow: Create release with title filter: $workflow_title_filter"
            exit 1
          fi
          gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "/repos/${GITHUB_REPOSITORY}/actions/runs/${run_id}/logs" > logs.zip

      # Use only local templates
      - name: Set up issue template
        id: template_local
        run: |
          case "${{ github.event.inputs.issue_template }}" in
            bug-report)
              template_file=".github/ISSUE_TEMPLATE/bug-report.md";;
            feature-request)
              template_file=".github/ISSUE_TEMPLATE/feature-request.md";;
            documentation-improvement)
              template_file=".github/ISSUE_TEMPLATE/documentation-improvement.md";;
            security-vulnerability)
              template_file=".github/ISSUE_TEMPLATE/security-vulnerability.md";;
            decision-record)
              template_file=".github/ISSUE_TEMPLATE/decision-record.md";;
            new-sig-or-wg-proposal)
              template_file=".github/ISSUE_TEMPLATE/new-sig-or-wg-proposal.md";;
            *)
              echo "Unknown template: ${{ github.event.inputs.issue_template }}"; exit 1;;
          esac
          echo "template_file=$template_file" >> $GITHUB_OUTPUT

      - name: Create issue using GitHub CLI
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          body=$(awk 'BEGIN{p=0}/^---/{p++}p>1' "${{ steps.template_local.outputs.template_file }}" | sed '/^---$/d')
          gh issue create \
            --title "${{ github.event.inputs.issue_title }}" \
            --body "$body" \
            --repo "$GITHUB_REPOSITORY"
